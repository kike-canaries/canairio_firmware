; CanAirIO Project 2018 - 2023
; ============================
; Author:        @hpsaturn
; Documentation: https://canair.io/docs
; Contributors:  https://github.com/kike-canaries/canairio_firmware/graphs/contributors
;                https://github.com/kike-canaries/canairio_sensorlib/graphs/contributors
;
; Special thanks to:
; @roberbike and @jcomas (New devices and libraries, testing and support the users)

[platformio]
default_envs = TTGO_TDISPLAY
extra_configs = ../canairio_sensorlib/unified-lib-deps.ini ; only for local tests of sensorslib

[common]
build_type = release
platform = espressif32 @ 4.4.0
framework = arduino
upload_speed = 1500000
monitor_speed = 115200
version = 0.7.0
revision = 989
# OTA remote update target (change it to none, if you want prevent CanAirIO updates)
target = dev
monitor_filters = 
  esp32_exception_decoder
  ; time
extra_scripts = pre:prebuild.py
build_flags = 
  -D CORE_DEBUG_LEVEL=0         # For debugging set to 3 and enable debug mode in the app
  -D MIN_PUBLISH_INTERVAL=30    # Minimum interval between clouds updates
  -D WAIT_FOR_PM_SENSOR=25      # time of stabilization of PM sensors in seconds
  -D ARDUINO_ESP32_DEV=1        # compatibilty for DFRobot NH3/CO library
  -D DISABLE_ALL_LIBRARY_WARNINGS=1
  -D SHELLMINATOR_BUFF_LEN=70
  -D SHELLMINATOR_BUFF_DIM=70
  -D SHELLMINATOR_LOGO_COLOR=YELLOW
  -D COMMANDER_MAX_COMMAND_SIZE=70
  -D WCLI_MAX_CMDS=16
  ; -D DISABLE_BLE=1            # removed Bluetooth module
  ; -D DISABLE_BATT=1           # removed battery module
  ; -D DISABLE_SNIFFER=1        # removed sniffer module
  ; -D DISABLE_CLI_TELNET=1     # disable remote access via telnet. It needs CLI
  ; -D DISABLE_CLI=1            # removed CLI module. Config via Bluetooth only
  ; -D DISABLE_OLED=1           # removed OLED module (T7S3 has issues with it)
  ; -D ENABLE_ANAIRE=1          # removed MQTT Anaire module (deprecated)
  ; -D ENABLE_OTA=1             # disable for memory saving. We have FOTA enable
  ; -Wall
  ; -Wextra
  ; -Werror

lib_deps = 
  bblanchon/ArduinoJson @ 7.3.1
  hpsaturn/EasyPreferences @ 0.1.3
  ; hpsaturn/ESP32 Wifi CLI @ 0.3.4
  https://github.com/hpsaturn/esp32-wifi-cli.git#esp32s2
  https://github.com/chrisjoyce911/esp32FOTA.git#2bbc9cb
  https://github.com/rlogiacco/CircularBuffer.git#f29cf01
  https://github.com/256dpi/arduino-mqtt.git#7afcfb1
  https://github.com/tobiasschuerg/InfluxDB-Client-for-Arduino.git#8e5f051
  ; hpsaturn/CanAirIO Air Quality Sensors Library @ 0.7.5
  https://github.com/kike-canaries/canairio_sensorlib.git#devel
  ; ${commonlibs.lib_deps}  ; only for local tests of sensorslib

[esp32_common]
extends = common
board = lolin32
board_build.partitions = min_spiffs.csv
build_flags = 
  ${common.build_flags}
  -D MAIN_HW_EN_PIN=27

[oled_common]
extends = esp32_common
lib_ignore =
  gui-utils-tft
  lorawan
lib_deps = 
  ${common.lib_deps}
  U8g2 @ ^2.28.8

[env:TTGO_T7]
extends = oled_common
board = ttgo-t7-v14-mini32

[env:WEMOSOLED]
extends = oled_common
upload_speed = 921600

[env:HELTEC]
extends = oled_common
upload_speed = 921600

[env:TTGO_TQ]
extends = oled_common

[env:ESP32DEVKIT]
extends = oled_common
upload_speed = 921600

[env:ESP32PICOD4]
extends = oled_common

[env:M5ATOM]
extends = oled_common
board = esp32dev
lib_deps = 
  ${oled_common.lib_deps}
  fastled/FastLED@^3.5.0
  m5stack/M5Atom@^0.1.0

[env:M5PICOD4]
extends = oled_common
build_flags = 
  ${esp32_common.build_flags}
  -D MAIN_HW_EN_PIN=19

[tft_common]
extends = esp32_common
board = esp32dev
lib_ignore = 
  gui-utils-oled
  lorawan

[env:M5STICKCPLUS]
extends = tft_common
lib_deps = 
  ${common.lib_deps}
  m5stack/M5Unified@0.2.2

[env:TTGO_TDISPLAY]
extends = tft_common
lib_deps = 
  ${common.lib_deps}
  bodmer/TFT_eSPI @ 2.5.43
build_flags = 
  ${esp32_common.build_flags}
  -D USER_SETUP_LOADED=1
  -include .pio/libdeps/${PIOENV}/TFT_eSPI/User_Setups/Setup25_TTGO_T_Display.h

[esp32c3_common]
platform = espressif32 @ 6.9.0
extends = oled_common
board = esp32-c3-devkitm-1
build_flags =
  ${oled_common.build_flags}
  -D MAIN_HW_EN_PIN=3         # enable the main hardware pin (optional)
  -D DISABLE_BATT=1           # removed battery module (ADC is not working) 
  -D DISABLE_SNIFFER=1        # removed sniffer module (for 4Mb flash boards)
  -D DISABLE_CLI_TELNET=1     # disable telnet festure (for 4Mb flash boards) 

[env:ESP32C3]
extends = esp32c3_common
build_flags = 
  ${esp32c3_common.build_flags}
  -D ARDUINO_USB_CDC_ON_BOOT=1
  -D ARDUINO_USB_MODE=1

[env:ESP32C3OIPLUS]
extends = esp32c3_common
board = ttgo-t-oi-plus

[env:ESP32C3LOLIN]
extends = esp32c3_common
board = lolin_c3_mini

[env:ESP32C3SEEDX]
extends = esp32c3_common
board = seeed_xiao_esp32c3

[env:AG_OPENAIR]
extends = esp32c3_common
build_flags = 
  ${esp32c3_common.build_flags}
  -D ARDUINO_USB_CDC_ON_BOOT=1
  -D ARDUINO_USB_MODE=1

[esp32s2_common]
extends = oled_common
platform = espressif32 @ 6.9.0
build_flags =
  ${oled_common.build_flags}
  -D DISABLE_BLE=1
  -D DISABLE_BATT=1

[env:ESP32S2LOLIN]
extends = esp32s2_common
board = lolin_s2_mini
build_flags =
  ${esp32s2_common.build_flags}
  -D ARDUINO_USB_CDC_ON_BOOT=1
  -D MAIN_HW_EN_PIN=3

[env:ESP32S2SAOLA]
extends = esp32s2_common
board = esp32-s2-saola-1
debug_tool = esp-prog             ; Use the ESP-Prog JTAG debugger
debug_init_break = tbreak setup   ; Set a breakpoint at the beginning of setup
debug_speed = 12000
build_flags =
  ${esp32s2_common.build_flags}
  -D ARDUINO_USB_CDC_ON_BOOT=0

[esp32s3_common]
extends = oled_common
platform = espressif32 @ 6.9.0
board = esp32-s3-devkitc-1
build_flags = 
  ${common.build_flags}
  -D ARDUINO_USB_CDC_ON_BOOT=1
  -D BOARD_HAS_PSRAM=1
  ; -mfix-esp32-psram-cache-issue
  -D MAIN_HW_EN_PIN=3          # enable the main hardware pin (main sensor)

[env:ESP32S3]  
extends = esp32s3_common
board_build.arduino.memory_type = dio_opi ;
board_build.partitions = default_8MB.csv
build_flags = 
  ${common.build_flags}
  -D MAIN_HW_EN_PIN=21          # enable the main hardware pin (main sensor)

[env:TTGO_T7S3]
extends = esp32s3_common
board_build.partitions = default_8MB.csv

; experimental LoRa version
[env:LORADEVKIT]
extends = esp32_common
upload_speed = 921600
board = ttgo-lora32-v1
lib_ignore =
  gui-utils-tft
lib_deps =
  ${oled_common.lib_deps}
  mcci-catena/MCCI LoRaWAN LMIC library @ 5.0.1
  lorawan
  ;nanopb/Nanopb@^0.4.7
  ;sabas1080/CayenneLPP @ ^1.1.0
  https://github.com/ElectronicCats/CayenneLPP
build_flags = 
  ${esp32_common.build_flags}
  -D RXD2=23
  -D TXD2=17
  -D hal_init=LMICHAL_init
  -D ARDUINO_LMIC_PROJECT_CONFIG_H_SUPPRESS
  -D CFG_eu868=1
  -D CFG_sx1276_radio=1
  -D LMIC_PRINTF_TO=Serial
  -D LMIC_DEBUG_LEVEL=2
  -D DISABLE_PING=1
  -D DISABLE_BEACONS=1
  -D ARDUINO_SAMD_VARIANT_COMPLIANCE=1
  -D TTGOLORA32V1
  ;lib_ignore = gui-utils-tft
